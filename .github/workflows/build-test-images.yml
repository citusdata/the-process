name: build-test-images

on:
  push:
    branches:
      - "**"

  workflow_dispatch:

jobs:
  build_dev_images_per_postgres:
    if: github.ref_name != 'master'
    name: push-test-images-for-dev
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command:
          - extbuilder
          - exttester
          - failtester
        pgversion:
          - '13.9'
          - '14.6'
          - '15.1'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # If current branch is not master,build and publish dev image
      - name: Build & Push all dev images
        run: |
          cd circleci/images
          make push-${{ matrix.command }}-${{matrix.pgversion}}

  build_dev_images_shared:
    if: github.ref_name != 'master'
    name: push-test-images-for-dev
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command:
          - citusupgradetester
          - pgupgradetester
          - stylechecker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # If current branch is not master,build and publish dev image
      - name: Build & Push all dev images
        run: |
          cd circleci/images
          make push-${{ matrix.command }}-all


  build_release_images:
    if: github.ref_name == 'master'
    name: push-test-images-for-release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push all live images
        run: |
          cd circleci/images
          RELEASE=1 make push-all
