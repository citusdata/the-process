name: build-test-images

on:
  push:
    branches:
      - "**"

  workflow_dispatch:

jobs:
  prepare_pgversion_matrix:
    runs-on: ubuntu-latest
    steps:
      # Need the repo checked out in order to read the file
      - uses: actions/checkout@v3
      - id: get_versions
        run: cat circleci/images/PG_VERSIONS >> $GITHUB_OUTPUT
    outputs:
      # Will look like '["13.9", "14.6", "15.1"]'
      pgversions: ${{ toJSON(steps.get_versions.outputs.*) }}

  build_dev_images_per_postgres:
    if: github.ref_name != 'master'
    name: push-test-images-for-dev
    runs-on: ubuntu-latest
    needs:
      - prepare_pgversion_matrix
    strategy:
      fail-fast: false
      matrix:
        command:
          - extbuilder
          - exttester
          - failtester
        pgversion: ${{ fromJSON(needs.prepare_pgversion_matrix.outputs.pgversions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: list buildx version
        run: |
          docker buildx version
          docker buildx ls
          docker buildx inspect

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.15.1

      - name: list buildx version (again)
        run: |
          docker buildx version
          docker buildx ls
          docker buildx inspect

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # If current branch is not master,build and publish dev image
      - name: Build & Push all dev images
        run: |
          cd circleci/images
          BUILDX_BUILDER=${{ steps.buildx.outputs.name }} make push-${{ matrix.command }}-${{ matrix.pgversion }}

  build_dev_images_shared:
    if: github.ref_name != 'master'
    name: push-test-images-for-dev
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command:
          - citusupgradetester
          - pgupgradetester
          - stylechecker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: list buildx version
        run: |
          docker buildx version
          docker buildx ls
          docker buildx inspect

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          version: v0.15.1

      - name: list buildx version (again)
        run: |
          docker buildx version
          docker buildx ls
          docker buildx inspect

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # If current branch is not master,build and publish dev image
      - name: Build & Push all dev images
        run: |
          cd circleci/images
          BUILDX_BUILDER=${{ steps.buildx.outputs.name }} make push-${{ matrix.command }}-all


  build_release_images:
    if: github.ref_name == 'master'
    name: push-test-images-for-release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push all live images
        run: |
          cd circleci/images
          RELEASE=1 make push-all
