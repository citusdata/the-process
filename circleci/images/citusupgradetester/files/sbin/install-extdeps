#!/bin/bash

# make bash behave
set -euxo pipefail
IFS=$'\n\t'

# this script needs root to install packages
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

citus_versions=( v8.0.0 v8.1.0 v8.2.0 v8.3.0 )

# get codename from release file
. /etc/os-release
codename=${VERSION#*(}
codename=${codename%)*}

# explicitly set user/group IDs
echo "Adding circleci user..." >&2
groupadd -r circleci --gid=1729
useradd -mg circleci --uid=1729 --shell=/bin/bash circleci

echo "Running apt-get update..." >&2
apt-get update
apt-get install -y --no-install-recommends \
  apt-transport-https \
  ca-certificates \
  curl \
  debian-archive-keyring \
  gcc \
  gosu

# import key and keep apt-key from issuing warnings
echo "Importing PGDG key..." >&2
curl -sf https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add -

apt-get install -y python3-pip

echo "Installing tools for failure testing..." >&2
pip3 install -Ir /tmp/etc/requirements.txt

# add pgdg repo to sources
echo "Writing /etc/apt/sources.list.d/pgdg.list..." >&2
echo "deb http://apt.postgresql.org/pub/repos/apt/ ${codename}-pgdg main" > \
    /etc/apt/sources.list.d/postgresql.list


# build list of needed server dev packages
echo "Installing server-dev packages..." >&2
apt-get update && apt-get install -y --no-install-recommends postgresql-server-dev-$PG_MAJOR

# build list of postgres
echo "Installing postgres packages..." >&2
apt-get install -y --no-install-recommends postgresql-$PG_MAJOR

# install old citus versions
for citus_version in "${citus_versions[@]}"
do
  git clone --branch $citus_version https://github.com/citusdata/citus.git --depth 1 citus_$citus_version
done

basedir="$(pwd)"

build_ext() {
  pg_major="$1"
  citus_version="$2"
  citus_dir=/citus_$citus_version

  builddir="${basedir}/build-${pg_major}"

  # do everything in a subdirectory to avoid clutter in current directory
  mkdir -p "${builddir}" && cd "${builddir}"

  CFLAGS=-Werror "${citus_dir}/configure" PG_CONFIG="/usr/lib/postgresql/${pg_major}/bin/pg_config" --enable-coverage

  installdir="${builddir}/install"
  make -j$(nproc) && mkdir -p "${installdir}" && make DESTDIR="${installdir}" install

  cd "${installdir}" && find . -type f -print > "${builddir}/files.lst"
  tar cvf "${basedir}/install-pg${pg_major}-citus${citus_version}.tar" `cat ${builddir}/files.lst`

  cd "${builddir}" && rm -rf install files.lst && make clean
}
for citus_version in "${citus_versions[@]}"
do 
  build_ext "$PG_MAJOR" "${citus_version}"
done

chmod o+w -R /usr/

# keep that image size small!
echo "Cleaning up..." >&2
rm -rf /var/lib/apt/lists/*
