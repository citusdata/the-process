#!/bin/bash

# make bash behave
set -euxo pipefail
IFS=$'\n\t'

# this script needs root to install packages
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

# get codename from release file
. /etc/os-release
codename=${VERSION#*(}
codename=${codename%)*}

pg_latest=12

# explicitly set user/group IDs
groupadd -r circleci --gid=1729
useradd -mg circleci --uid=1729 --shell=/bin/bash circleci

echo "Running apt-get update..." >&2
apt-get update
apt-get install -y --no-install-recommends \
  apt-transport-https \
  ca-certificates \
  curl \
  debian-archive-keyring \
  gcc \
  gnupg

# import key and keep apt-key from issuing warnings
echo "Importing PGDG key..." >&2
curl -sf https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add -


# add pgdg repo to sources
echo "Writing /etc/apt/sources.list.d/pgdg.list..." >&2
echo "deb http://apt.postgresql.org/pub/repos/apt/ ${codename}-pgdg main ${pg_latest}" > \
    /etc/apt/sources.list.d/postgresql.list


pkg_cloud_url="https://packagecloud.io/install/repositories/citus-bot/the-process/script.deb.sh"

curl -sf "${pkg_cloud_url}" | unique_id=exttester bash

cat > /etc/apt/preferences.d/citusdata_the-process.pref <<EOF
Package: postgresql-server-dev-*
Pin: release o=packagecloud.io/citus-bot/the-process
Pin-Priority: 700
EOF


echo "Installing tools for testing PostgreSQL extensions..." >&2
apt-get update && apt-get install -y --no-install-recommends make postgresql-common perl libcurl3 "postgresql-${PG_MAJOR}" "postgresql-server-dev-${PG_MAJOR}"

# Give permission for usr so that circleci can write citus artifacts
chmod o+w -R /usr/

# install gosu so that we can run tests from root with circleci user
apt-get install -y gosu


# keep that image size small!
echo "Cleaning up..." >&2
rm -rf /var/lib/apt/lists/*
