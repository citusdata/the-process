#!/bin/bash

# make bash behave
set -euxo pipefail
IFS=$'\n\t'

# this script needs root to install packages
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

# taken from https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -o|--old-pg-version)
    OLD_PG_VERSION="$2"
    shift # pass argument
    shift # pass value
    ;;
    -n|--new-pg-version)
    NEW_PG_VERSION="$2"
    shift # pass argument
    shift # pass value
    ;;    
    -t|--target)
    TARGET="$2"
    shift # pass argument
    shift # pass value
    ;;    
    *) # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;    
esac
done

# install citus artifacts for both postgres versions
cd / && tar xfv "${CIRCLE_WORKING_DIRECTORY}/install-$OLD_PG_VERSION.tar"
cd / && tar xfv "${CIRCLE_WORKING_DIRECTORY}/install-$NEW_PG_VERSION.tar"

# Take Makefile.global from already made build
cp  ${CIRCLE_WORKING_DIRECTORY}/build-$NEW_PG_VERSION/Makefile.global ${CIRCLE_WORKING_DIRECTORY}
status=0

gosu circleci make -C "${CIRCLE_WORKING_DIRECTORY}/src/test/regress" $TARGET old-bindir=/usr/lib/postgresql/$OLD_PG_VERSION/bin new-bindir=/usr/lib/postgresql/$NEW_PG_VERSION/bin || status=$?

diffs="${CIRCLE_WORKING_DIRECTORY}/src/test/regress/regression.diffs"

if test -f "${diffs}"; then cat "${diffs}"; fi

exit $status
